
#pragma only_renderers d3d11 ps4 xboxone vulkan metal switch
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/Texture2DX.hlsl"

CBUFFER_START (UnityCBuffer)
  uint2 _RectOffset;
CBUFFER_END

RW_TEXTURE2DX(float1, _Result1);
TEXTURE2DX(_Source4);

#pragma kernel KSampleCopy4_1_x_8   KERNEL_NAME41=KSampleCopy4_1_x_8  KERNEL_SIZE=8
#pragma kernel KSampleCopy4_1_x_1   KERNEL_NAME41=KSampleCopy4_1_x_1  KERNEL_SIZE=1
[numthreads(KERNEL_SIZE, KERNEL_SIZE, 1)]
void KERNEL_NAME41(uint3 dispatchThreadId : SV_DispatchThreadID)
{
<<<<<<< Updated upstream
    uint2 positionSS = _RectOffset + dispatchThreadId;
    _Result1[COORD_TEXTURE2DX(positionSS)] = LOAD_TEXTURE2DX(_Source4, positionSS).x;
=======
<<<<<<< Updated upstream
    _Result1[_RectOffset + dispatchThreadId] = LOAD_TEXTURE2D(_Source4, _RectOffset + dispatchThreadId).x;
=======
    UNITY_STEREO_ASSIGN_COMPUTE_EYE_INDEX(dispatchThreadId.z);

    uint2 positionSS = _RectOffset + dispatchThreadId.xy;
    _Result1[COORD_TEXTURE2DX(positionSS)] = LOAD_TEXTURE2DX(_Source4, positionSS).x;
>>>>>>> Stashed changes
>>>>>>> Stashed changes
}
